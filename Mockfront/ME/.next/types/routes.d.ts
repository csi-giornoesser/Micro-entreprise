// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/"
type AppRouteHandlerRoutes = "/api/alerts" | "/api/clients/[id]" | "/api/commercial/rappels" | "/api/dashboard" | "/api/dossiers" | "/api/dossiers/[id]" | "/api/dossiers/[id]/documents" | "/api/dossiers/[id]/documents/[type]/download" | "/api/dossiers/[id]/etapes/formulaire/completer" | "/api/dossiers/[id]/messages" | "/api/dossiers/[id]/pieces" | "/api/dossiers/[id]/pieces/[piece_key]/upload" | "/api/dossiers/[id]/timeline" | "/api/entreprises/[id]" | "/api/exports/activite" | "/api/exports/commissions" | "/api/exports/dossiers" | "/api/notifications" | "/api/partenaires/[id]" | "/api/partenaires/[id]/clients" | "/api/partenaires/[id]/interactions" | "/api/partenaires/[id]/invoices" | "/api/partenaires/[id]/invoices/[invoiceId]/pdf" | "/api/partenaires/[id]/invoices/preview" | "/api/partenaires/close-month" | "/api/tickets" | "/api/tickets/[id]" | "/api/tickets/[id]/events"
type PageRoutes = never
type LayoutRoutes = "/" | "/crm"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/alerts": {}
  "/api/clients/[id]": { "id": string; }
  "/api/commercial/rappels": {}
  "/api/dashboard": {}
  "/api/dossiers": {}
  "/api/dossiers/[id]": { "id": string; }
  "/api/dossiers/[id]/documents": { "id": string; }
  "/api/dossiers/[id]/documents/[type]/download": { "id": string; "type": string; }
  "/api/dossiers/[id]/etapes/formulaire/completer": { "id": string; }
  "/api/dossiers/[id]/messages": { "id": string; }
  "/api/dossiers/[id]/pieces": { "id": string; }
  "/api/dossiers/[id]/pieces/[piece_key]/upload": { "id": string; "piece_key": string; }
  "/api/dossiers/[id]/timeline": { "id": string; }
  "/api/entreprises/[id]": { "id": string; }
  "/api/exports/activite": {}
  "/api/exports/commissions": {}
  "/api/exports/dossiers": {}
  "/api/notifications": {}
  "/api/partenaires/[id]": { "id": string; }
  "/api/partenaires/[id]/clients": { "id": string; }
  "/api/partenaires/[id]/interactions": { "id": string; }
  "/api/partenaires/[id]/invoices": { "id": string; }
  "/api/partenaires/[id]/invoices/[invoiceId]/pdf": { "id": string; "invoiceId": string; }
  "/api/partenaires/[id]/invoices/preview": { "id": string; }
  "/api/partenaires/close-month": {}
  "/api/tickets": {}
  "/api/tickets/[id]": { "id": string; }
  "/api/tickets/[id]/events": { "id": string; }
  "/crm": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/crm": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
