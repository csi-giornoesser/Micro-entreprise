// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/page.tsx
{
  const handler = {} as typeof import("../../app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../app/api/alerts/route.ts
{
  const handler = {} as typeof import("../../app/api/alerts/route.js")
  handler satisfies RouteHandlerConfig<"/api/alerts">
}

// Validate ../../app/api/clients/[id]/route.ts
{
  const handler = {} as typeof import("../../app/api/clients/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/clients/[id]">
}

// Validate ../../app/api/commercial/rappels/route.ts
{
  const handler = {} as typeof import("../../app/api/commercial/rappels/route.js")
  handler satisfies RouteHandlerConfig<"/api/commercial/rappels">
}

// Validate ../../app/api/dashboard/route.ts
{
  const handler = {} as typeof import("../../app/api/dashboard/route.js")
  handler satisfies RouteHandlerConfig<"/api/dashboard">
}

// Validate ../../app/api/dossiers/[id]/documents/[type]/download/route.ts
{
  const handler = {} as typeof import("../../app/api/dossiers/[id]/documents/[type]/download/route.js")
  handler satisfies RouteHandlerConfig<"/api/dossiers/[id]/documents/[type]/download">
}

// Validate ../../app/api/dossiers/[id]/documents/route.ts
{
  const handler = {} as typeof import("../../app/api/dossiers/[id]/documents/route.js")
  handler satisfies RouteHandlerConfig<"/api/dossiers/[id]/documents">
}

// Validate ../../app/api/dossiers/[id]/etapes/formulaire/completer/route.ts
{
  const handler = {} as typeof import("../../app/api/dossiers/[id]/etapes/formulaire/completer/route.js")
  handler satisfies RouteHandlerConfig<"/api/dossiers/[id]/etapes/formulaire/completer">
}

// Validate ../../app/api/dossiers/[id]/messages/route.ts
{
  const handler = {} as typeof import("../../app/api/dossiers/[id]/messages/route.js")
  handler satisfies RouteHandlerConfig<"/api/dossiers/[id]/messages">
}

// Validate ../../app/api/dossiers/[id]/pieces/[piece_key]/upload/route.ts
{
  const handler = {} as typeof import("../../app/api/dossiers/[id]/pieces/[piece_key]/upload/route.js")
  handler satisfies RouteHandlerConfig<"/api/dossiers/[id]/pieces/[piece_key]/upload">
}

// Validate ../../app/api/dossiers/[id]/pieces/route.ts
{
  const handler = {} as typeof import("../../app/api/dossiers/[id]/pieces/route.js")
  handler satisfies RouteHandlerConfig<"/api/dossiers/[id]/pieces">
}

// Validate ../../app/api/dossiers/[id]/route.ts
{
  const handler = {} as typeof import("../../app/api/dossiers/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/dossiers/[id]">
}

// Validate ../../app/api/dossiers/[id]/timeline/route.ts
{
  const handler = {} as typeof import("../../app/api/dossiers/[id]/timeline/route.js")
  handler satisfies RouteHandlerConfig<"/api/dossiers/[id]/timeline">
}

// Validate ../../app/api/dossiers/route.ts
{
  const handler = {} as typeof import("../../app/api/dossiers/route.js")
  handler satisfies RouteHandlerConfig<"/api/dossiers">
}

// Validate ../../app/api/entreprises/[id]/route.ts
{
  const handler = {} as typeof import("../../app/api/entreprises/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/entreprises/[id]">
}

// Validate ../../app/api/exports/activite/route.ts
{
  const handler = {} as typeof import("../../app/api/exports/activite/route.js")
  handler satisfies RouteHandlerConfig<"/api/exports/activite">
}

// Validate ../../app/api/exports/commissions/route.ts
{
  const handler = {} as typeof import("../../app/api/exports/commissions/route.js")
  handler satisfies RouteHandlerConfig<"/api/exports/commissions">
}

// Validate ../../app/api/exports/dossiers/route.ts
{
  const handler = {} as typeof import("../../app/api/exports/dossiers/route.js")
  handler satisfies RouteHandlerConfig<"/api/exports/dossiers">
}

// Validate ../../app/api/notifications/route.ts
{
  const handler = {} as typeof import("../../app/api/notifications/route.js")
  handler satisfies RouteHandlerConfig<"/api/notifications">
}

// Validate ../../app/api/partenaires/[id]/clients/route.ts
{
  const handler = {} as typeof import("../../app/api/partenaires/[id]/clients/route.js")
  handler satisfies RouteHandlerConfig<"/api/partenaires/[id]/clients">
}

// Validate ../../app/api/partenaires/[id]/interactions/route.ts
{
  const handler = {} as typeof import("../../app/api/partenaires/[id]/interactions/route.js")
  handler satisfies RouteHandlerConfig<"/api/partenaires/[id]/interactions">
}

// Validate ../../app/api/partenaires/[id]/invoices/[invoiceId]/pdf/route.ts
{
  const handler = {} as typeof import("../../app/api/partenaires/[id]/invoices/[invoiceId]/pdf/route.js")
  handler satisfies RouteHandlerConfig<"/api/partenaires/[id]/invoices/[invoiceId]/pdf">
}

// Validate ../../app/api/partenaires/[id]/invoices/preview/route.ts
{
  const handler = {} as typeof import("../../app/api/partenaires/[id]/invoices/preview/route.js")
  handler satisfies RouteHandlerConfig<"/api/partenaires/[id]/invoices/preview">
}

// Validate ../../app/api/partenaires/[id]/invoices/route.ts
{
  const handler = {} as typeof import("../../app/api/partenaires/[id]/invoices/route.js")
  handler satisfies RouteHandlerConfig<"/api/partenaires/[id]/invoices">
}

// Validate ../../app/api/partenaires/[id]/route.ts
{
  const handler = {} as typeof import("../../app/api/partenaires/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/partenaires/[id]">
}

// Validate ../../app/api/partenaires/close-month/route.ts
{
  const handler = {} as typeof import("../../app/api/partenaires/close-month/route.js")
  handler satisfies RouteHandlerConfig<"/api/partenaires/close-month">
}

// Validate ../../app/api/tickets/[id]/events/route.ts
{
  const handler = {} as typeof import("../../app/api/tickets/[id]/events/route.js")
  handler satisfies RouteHandlerConfig<"/api/tickets/[id]/events">
}

// Validate ../../app/api/tickets/[id]/route.ts
{
  const handler = {} as typeof import("../../app/api/tickets/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/tickets/[id]">
}

// Validate ../../app/api/tickets/route.ts
{
  const handler = {} as typeof import("../../app/api/tickets/route.js")
  handler satisfies RouteHandlerConfig<"/api/tickets">
}






