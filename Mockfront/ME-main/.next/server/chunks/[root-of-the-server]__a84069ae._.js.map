{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/ME/app/api/_lib/db.mjs"],"sourcesContent":["// src/app/api/_lib/db.mjs\r\nimport { Pool } from \"pg\";\r\n\r\nlet _pool = globalThis.__PG_POOL;\r\nif (!_pool) {\r\n  _pool = new Pool({\r\n    connectionString: process.env.DATABASE_URL,\r\n    ssl: { rejectUnauthorized: false }, // Neon\r\n  });\r\n  globalThis.__PG_POOL = _pool;\r\n}\r\n\r\nexport function getPool() {\r\n  return _pool;\r\n}\r\n\r\n/**\r\n * withClient(async (c) => { ... })  // c = client PG\r\n * GÃ¨re connect/release et laisse ton code au propre.\r\n */\r\nexport async function withClient(fn) {\r\n  const pool = getPool();\r\n  const client = await pool.connect();\r\n  try {\r\n    return await fn(client);\r\n  } finally {\r\n    client.release();\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAC1B;;;;;;AAEA,IAAI,QAAQ,WAAW,SAAS;AAChC,IAAI,CAAC,OAAO;IACV,QAAQ,IAAI,oGAAA,CAAA,OAAI,CAAC;QACf,kBAAkB,QAAQ,GAAG,CAAC,YAAY;QAC1C,KAAK;YAAE,oBAAoB;QAAM;IACnC;IACA,WAAW,SAAS,GAAG;AACzB;AAEO,SAAS;IACd,OAAO;AACT;AAMO,eAAe,WAAW,EAAE;IACjC,MAAM,OAAO;IACb,MAAM,SAAS,MAAM,KAAK,OAAO;IACjC,IAAI;QACF,OAAO,MAAM,GAAG;IAClB,SAAU;QACR,OAAO,OAAO;IAChB;AACF","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/ME/app/api/alerts/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { getPool } from \"../_lib/db.mjs\";\r\n\r\nconst pool = getPool();\r\n\r\nexport async function GET(req) {\r\n  try {\r\n    const c = await pool.connect();\r\n    \r\n    try {\r\n      const alerts = {\r\n        critical: [],\r\n        important: [],\r\n        info: []\r\n      };\r\n\r\n      // ðŸ”´ ALERTES CRITIQUES\r\n\r\n      // 1. Dossiers bloquÃ©s > 7 jours\r\n      const { rows: dossiersBloques } = await c.query(`\r\n        SELECT \r\n          d.id,\r\n          d.statut,\r\n          d.date_creation,\r\n          d.blocages,\r\n          d.derniere_modification,\r\n          c.prenom,\r\n          c.nom,\r\n          c.email,\r\n          EXTRACT(DAYS FROM NOW() - COALESCE(d.derniere_modification::date, d.date_creation::date)) as jours_blocage\r\n        FROM core.dossiers d\r\n        LEFT JOIN core.clients c ON d.client_id = c.id\r\n        WHERE array_length(d.blocages, 1) > 0\r\n          AND EXTRACT(DAYS FROM NOW() - COALESCE(d.derniere_modification::date, d.date_creation::date)) > 7\r\n        ORDER BY jours_blocage DESC\r\n        LIMIT 10\r\n      `);\r\n\r\n      if (dossiersBloques.length > 0) {\r\n        alerts.critical.push({\r\n          id: 'dossiers_bloques',\r\n          type: 'dossiers_blocked',\r\n          title: `${dossiersBloques.length} dossier(s) bloquÃ©(s) > 7 jours`,\r\n          description: 'Dossiers avec blocages non rÃ©solus depuis plus d\\'une semaine',\r\n          count: dossiersBloques.length,\r\n          items: dossiersBloques.map(d => ({\r\n            id: d.id,\r\n            label: `Dossier #${d.id} - ${d.prenom} ${d.nom}`,\r\n            detail: `BloquÃ© ${Math.floor(d.jours_blocage)} jours - ${d.blocages.join(', ')}`,\r\n            link: `/crm/clients/${d.id}`,\r\n            days: Math.floor(d.jours_blocage)\r\n          })),\r\n          action: 'traiter',\r\n          priority: 'critical'\r\n        });\r\n      }\r\n\r\n      // 2. Tickets prioritÃ© \"Haute\" non assignÃ©s\r\n      const { rows: ticketsUrgents } = await c.query(`\r\n        SELECT \r\n          t.id,\r\n          t.subject,\r\n          t.created_at,\r\n          t.priorite,\r\n          d.client_id,\r\n          c.prenom,\r\n          c.nom,\r\n          EXTRACT(HOURS FROM NOW() - t.created_at) as heures_attente\r\n        FROM core.tickets t\r\n        LEFT JOIN core.dossiers d ON t.dossier_id = d.id\r\n        LEFT JOIN core.clients c ON d.client_id = c.id\r\n        WHERE t.priorite = 'Haute' \r\n          AND t.assigne_operateur_id IS NULL\r\n          AND t.statut IN ('Nouveau', 'En cours')\r\n        ORDER BY t.created_at ASC\r\n      `);\r\n\r\n      if (ticketsUrgents.length > 0) {\r\n        alerts.critical.push({\r\n          id: 'tickets_urgents',\r\n          type: 'tickets_urgent',\r\n          title: `${ticketsUrgents.length} ticket(s) urgents non assignÃ©s`,\r\n          description: 'Tickets prioritÃ© HAUTE en attente d\\'assignation',\r\n          count: ticketsUrgents.length,\r\n          items: ticketsUrgents.map(t => ({\r\n            id: t.id,\r\n            label: `Ticket #${t.id} - ${t.subject}`,\r\n            detail: `${t.prenom} ${t.nom} - En attente ${Math.floor(t.heures_attente)}h`,\r\n            link: `/crm/tickets/${t.id}`,\r\n            hours: Math.floor(t.heures_attente)\r\n          })),\r\n          action: 'assigner',\r\n          priority: 'critical'\r\n        });\r\n      }\r\n\r\n      // 3. Documents refusÃ©s > 48h sans action\r\n      const { rows: docsRefuses } = await c.query(`\r\n        SELECT \r\n          pj.id,\r\n          pj.type,\r\n          pj.motif_refus,\r\n          pj.uploaded_at,\r\n          d.id as dossier_id,\r\n          c.prenom,\r\n          c.nom,\r\n          EXTRACT(HOURS FROM NOW() - pj.uploaded_at) as heures_refus\r\n        FROM core.pieces_justificatives pj\r\n        LEFT JOIN core.dossiers d ON pj.dossier_id = d.id\r\n        LEFT JOIN core.clients c ON d.client_id = c.id\r\n        WHERE pj.statut = 'refusee'\r\n          AND EXTRACT(HOURS FROM NOW() - pj.uploaded_at) > 48\r\n        ORDER BY pj.uploaded_at ASC\r\n        LIMIT 10\r\n      `);\r\n\r\n      if (docsRefuses.length > 0) {\r\n        alerts.critical.push({\r\n          id: 'docs_refuses',\r\n          type: 'documents_refused',\r\n          title: `${docsRefuses.length} document(s) refusÃ©s > 48h`,\r\n          description: 'Documents refusÃ©s sans nouvelle version depuis plus de 2 jours',\r\n          count: docsRefuses.length,\r\n          items: docsRefuses.map(d => ({\r\n            id: d.dossier_id,\r\n            label: `${d.type} - ${d.prenom} ${d.nom}`,\r\n            detail: `RefusÃ© ${Math.floor(d.heures_refus / 24)} jours - ${d.motif_refus}`,\r\n            link: `/crm/clients/${d.dossier_id}`,\r\n            days: Math.floor(d.heures_refus / 24)\r\n          })),\r\n          action: 'relancer',\r\n          priority: 'critical'\r\n        });\r\n      }\r\n\r\n      // ðŸŸ¡ ALERTES IMPORTANTES\r\n\r\n      // 1. Dossiers \"en_attente\" > 3 jours\r\n      const { rows: dossiersAttente } = await c.query(`\r\n        SELECT \r\n          d.id,\r\n          d.statut,\r\n          d.date_creation,\r\n          d.derniere_modification,\r\n          c.prenom,\r\n          c.nom,\r\n          EXTRACT(DAYS FROM NOW() - COALESCE(d.derniere_modification::date, d.date_creation::date)) as jours_attente\r\n        FROM core.dossiers d\r\n        LEFT JOIN core.clients c ON d.client_id = c.id\r\n        WHERE d.statut = 'en_attente'\r\n          AND EXTRACT(DAYS FROM NOW() - COALESCE(d.derniere_modification::date, d.date_creation::date)) > 3\r\n        ORDER BY jours_attente DESC\r\n        LIMIT 15\r\n      `);\r\n\r\n      if (dossiersAttente.length > 0) {\r\n        alerts.important.push({\r\n          id: 'dossiers_attente',\r\n          type: 'dossiers_waiting',\r\n          title: `${dossiersAttente.length} dossier(s) en attente > 3 jours`,\r\n          description: 'Dossiers en attente de traitement depuis plus de 3 jours',\r\n          count: dossiersAttente.length,\r\n          items: dossiersAttente.slice(0, 5).map(d => ({\r\n            id: d.id,\r\n            label: `Dossier #${d.id} - ${d.prenom} ${d.nom}`,\r\n            detail: `En attente ${Math.floor(d.jours_attente)} jours`,\r\n            link: `/crm/clients/${d.id}`,\r\n            days: Math.floor(d.jours_attente)\r\n          })),\r\n          action: 'traiter',\r\n          priority: 'important'\r\n        });\r\n      }\r\n\r\n      // 2. Tickets \"Nouveau\" > 24h\r\n      const { rows: ticketsNouveaux } = await c.query(`\r\n        SELECT \r\n          t.id,\r\n          t.subject,\r\n          t.created_at,\r\n          t.priorite,\r\n          d.client_id,\r\n          c.prenom,\r\n          c.nom,\r\n          EXTRACT(HOURS FROM NOW() - t.created_at) as heures_attente\r\n        FROM core.tickets t\r\n        LEFT JOIN core.dossiers d ON t.dossier_id = d.id\r\n        LEFT JOIN core.clients c ON d.client_id = c.id\r\n        WHERE t.statut = 'Nouveau'\r\n          AND EXTRACT(HOURS FROM NOW() - t.created_at) > 24\r\n        ORDER BY t.created_at ASC\r\n        LIMIT 10\r\n      `);\r\n\r\n      if (ticketsNouveaux.length > 0) {\r\n        alerts.important.push({\r\n          id: 'tickets_nouveaux',\r\n          type: 'tickets_new',\r\n          title: `${ticketsNouveaux.length} nouveau(x) ticket(s) > 24h`,\r\n          description: 'Nouveaux tickets non traitÃ©s depuis plus d\\'un jour',\r\n          count: ticketsNouveaux.length,\r\n          items: ticketsNouveaux.slice(0, 5).map(t => ({\r\n            id: t.id,\r\n            label: `Ticket #${t.id} - ${t.subject}`,\r\n            detail: `${t.prenom} ${t.nom} - PrioritÃ© ${t.priorite}`,\r\n            link: `/crm/tickets/${t.id}`,\r\n            hours: Math.floor(t.heures_attente)\r\n          })),\r\n          action: 'prendre_en_charge',\r\n          priority: 'important'\r\n        });\r\n      }\r\n\r\n      // ðŸ”µ ALERTES INFORMATIVES\r\n\r\n      // 1. Nouveaux dossiers du jour\r\n      const { rows: nouveauxDossiers } = await c.query(`\r\n        SELECT \r\n          d.id,\r\n          d.statut,\r\n          d.date_creation,\r\n          c.prenom,\r\n          c.nom,\r\n          p.nom as partenaire_nom\r\n        FROM core.dossiers d\r\n        LEFT JOIN core.clients c ON d.client_id = c.id\r\n        LEFT JOIN core.partenaires p ON d.partenaire_id = p.id\r\n        WHERE d.date_creation::date = CURRENT_DATE\r\n        ORDER BY d.date_creation DESC\r\n      `);\r\n\r\n      if (nouveauxDossiers.length > 0) {\r\n        alerts.info.push({\r\n          id: 'nouveaux_dossiers',\r\n          type: 'new_dossiers',\r\n          title: `${nouveauxDossiers.length} nouveau(x) dossier(s) aujourd'hui`,\r\n          description: 'Dossiers crÃ©Ã©s dans les derniÃ¨res 24h',\r\n          count: nouveauxDossiers.length,\r\n          items: nouveauxDossiers.slice(0, 5).map(d => ({\r\n            id: d.id,\r\n            label: `Dossier #${d.id} - ${d.prenom} ${d.nom}`,\r\n            detail: `${d.partenaire_nom} - Statut: ${d.statut}`,\r\n            link: `/crm/clients/${d.id}`\r\n          })),\r\n          action: 'consulter',\r\n          priority: 'info'\r\n        });\r\n      }\r\n\r\n      // 2. Tickets rÃ©solus derniÃ¨res 24h\r\n      const { rows: ticketsResolus } = await c.query(`\r\n        SELECT \r\n          t.id,\r\n          t.subject,\r\n          t.created_at,\r\n          d.client_id,\r\n          c.prenom,\r\n          c.nom\r\n        FROM core.tickets t\r\n        LEFT JOIN core.dossiers d ON t.dossier_id = d.id\r\n        LEFT JOIN core.clients c ON d.client_id = c.id\r\n        WHERE t.statut = 'RÃ©solu'\r\n          AND t.created_at >= CURRENT_DATE - INTERVAL '24 hours'\r\n        ORDER BY t.created_at DESC\r\n        LIMIT 10\r\n      `);\r\n\r\n      if (ticketsResolus.length > 0) {\r\n        alerts.info.push({\r\n          id: 'tickets_resolus',\r\n          type: 'tickets_resolved',\r\n          title: `${ticketsResolus.length} ticket(s) rÃ©solu(s) aujourd'hui`,\r\n          description: 'Tickets fermÃ©s dans les derniÃ¨res 24h',\r\n          count: ticketsResolus.length,\r\n          items: ticketsResolus.slice(0, 5).map(t => ({\r\n            id: t.id,\r\n            label: `Ticket #${t.id} - ${t.subject}`,\r\n            detail: `${t.prenom} ${t.nom}`,\r\n            link: `/crm/tickets/${t.id}`\r\n          })),\r\n          action: 'consulter',\r\n          priority: 'info'\r\n        });\r\n      }\r\n\r\n      // Compter totaux\r\n      const totalCritical = alerts.critical.reduce((sum, alert) => sum + alert.count, 0);\r\n      const totalImportant = alerts.important.reduce((sum, alert) => sum + alert.count, 0);\r\n      const totalInfo = alerts.info.reduce((sum, alert) => sum + alert.count, 0);\r\n\r\n      return NextResponse.json({\r\n        alerts,\r\n        summary: {\r\n          critical: totalCritical,\r\n          important: totalImportant,\r\n          info: totalInfo,\r\n          total: totalCritical + totalImportant + totalInfo\r\n        },\r\n        generated_at: new Date().toISOString()\r\n      });\r\n\r\n    } finally {\r\n      c.release();\r\n    }\r\n\r\n  } catch (e) {\r\n    console.error(\"Erreur GET alerts:\", e);\r\n    return NextResponse.json({\r\n      error: \"Erreur lors de la rÃ©cupÃ©ration des alertes\"\r\n    }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}