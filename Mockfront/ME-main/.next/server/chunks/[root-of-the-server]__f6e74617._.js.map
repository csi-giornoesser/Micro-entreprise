{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/ME/app/api/_lib/db.mjs"],"sourcesContent":["// src/app/api/_lib/db.mjs\r\nimport { Pool } from \"pg\";\r\n\r\nlet _pool = globalThis.__PG_POOL;\r\nif (!_pool) {\r\n  _pool = new Pool({\r\n    connectionString: process.env.DATABASE_URL,\r\n    ssl: { rejectUnauthorized: false }, // Neon\r\n  });\r\n  globalThis.__PG_POOL = _pool;\r\n}\r\n\r\nexport function getPool() {\r\n  return _pool;\r\n}\r\n\r\n/**\r\n * withClient(async (c) => { ... })  // c = client PG\r\n * Gère connect/release et laisse ton code au propre.\r\n */\r\nexport async function withClient(fn) {\r\n  const pool = getPool();\r\n  const client = await pool.connect();\r\n  try {\r\n    return await fn(client);\r\n  } finally {\r\n    client.release();\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAC1B;;;;;;AAEA,IAAI,QAAQ,WAAW,SAAS;AAChC,IAAI,CAAC,OAAO;IACV,QAAQ,IAAI,oGAAA,CAAA,OAAI,CAAC;QACf,kBAAkB,QAAQ,GAAG,CAAC,YAAY;QAC1C,KAAK;YAAE,oBAAoB;QAAM;IACnC;IACA,WAAW,SAAS,GAAG;AACzB;AAEO,SAAS;IACd,OAAO;AACT;AAMO,eAAe,WAAW,EAAE;IACjC,MAAM,OAAO;IACb,MAAM,SAAS,MAAM,KAAK,OAAO;IACjC,IAAI;QACF,OAAO,MAAM,GAAG;IAClB,SAAU;QACR,OAAO,OAAO;IAChB;AACF","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/ME/app/api/dossiers/%5Bid%5D/timeline/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { getPool } from \"../../../_lib/db.mjs\";\r\n\r\nconst pool = getPool();\r\n\r\n// Étapes macro pour la progression\r\nconst MACRO_STEP_IDS = new Set([\r\n  \"formulaire\",\r\n  \"pieces\",\r\n  \"mandat\",\r\n  \"transmission\",\r\n  \"processing\",\r\n  \"siren\",\r\n  \"attestation\",\r\n]);\r\n\r\n// Pièces obligatoires (hors mandat)\r\nconst REQUIRED_PIECES = [\"CNI\", \"Passeport\", \"PhotoIdentite\", \"RIB\"];\r\nconst MANDATE_KEY = \"MandatSigne\";\r\n\r\nexport async function GET(req, { params }) {\r\n  try {\r\n    const { id } = params;\r\n    const dossierId = parseInt(id, 10);\r\n    if (!dossierId) {\r\n      return NextResponse.json({ error: \"ID dossier invalide\" }, { status: 400 });\r\n    }\r\n\r\n    const c = await pool.connect();\r\n    try {\r\n      // 1) Dossier + infos jointes\r\n      const { rows: dossiers } = await c.query(\r\n        `\r\n        SELECT \r\n          d.*,\r\n          c.prenom, c.nom, c.email,\r\n          e.id  AS entreprise_id,\r\n          e.denomination AS entreprise_denomination,\r\n          p.nom AS partenaire_nom\r\n        FROM core.dossiers d\r\n        LEFT JOIN core.clients c     ON d.client_id = c.id\r\n        LEFT JOIN core.entreprises e ON d.entreprise_id = e.id\r\n        LEFT JOIN core.partenaires p ON d.partenaire_id = p.id\r\n        WHERE d.id = $1\r\n        `,\r\n        [dossierId]\r\n      );\r\n      if (!dossiers.length) {\r\n        return NextResponse.json({ error: \"Dossier introuvable\" }, { status: 404 });\r\n      }\r\n      const dossier = dossiers[0];\r\n\r\n      // 2) Documents officiels\r\n      const { rows: documentsOfficiels } = await c.query(\r\n        `\r\n        SELECT type, source, fichier, date\r\n        FROM core.documents_generes\r\n        WHERE entreprise_id = $1\r\n        ORDER BY date ASC\r\n        `,\r\n        [dossier.entreprise_id]\r\n      );\r\n\r\n      // 3) Pièces justificatives client (toutes)\r\n      const { rows: piecesClient } = await c.query(\r\n        `\r\n        SELECT type, statut, uploaded_at, motif_refus\r\n        FROM core.pieces_justificatives\r\n        WHERE dossier_id = $1\r\n        ORDER BY uploaded_at ASC NULLS LAST\r\n        `,\r\n        [dossierId]\r\n      );\r\n\r\n      // 4) Events\r\n      const { rows: eventsRaw } = await c.query(\r\n        `\r\n        SELECT action, meta, at\r\n        FROM core.dossier_events\r\n        WHERE dossier_id = $1\r\n          AND action IN ('status_change', 'document_validated', 'admin_action', 'step_completed')\r\n        ORDER BY at ASC\r\n        `,\r\n        [dossierId]\r\n      );\r\n      const events = eventsRaw.map((e) => ({\r\n        ...e,\r\n        meta: typeof e.meta === \"string\" ? JSON.parse(e.meta) : e.meta,\r\n      }));\r\n\r\n      // 5) Tickets\r\n      const { rows: tickets } = await c.query(\r\n        `\r\n        SELECT id, subject, statut, priorite, created_at\r\n        FROM core.tickets\r\n        WHERE dossier_id = $1\r\n        ORDER BY created_at DESC\r\n        LIMIT 3\r\n        `,\r\n        [dossierId]\r\n      );\r\n\r\n      // ---------- LOGIQUE D’ÉTAPE ----------\r\n\r\n      // A) FORMULAIRE\r\n      const formEvent = events.find(\r\n        (e) =>\r\n          e.action === \"step_completed\" &&\r\n          e.meta &&\r\n          (e.meta.step === \"formulaire\" ||\r\n            e.meta?.step === \"Formulaire\" ||\r\n            e.meta?.step === \"form_done\")\r\n      );\r\n      const formulaireStatus = formEvent ? \"completed\" : \"pending\";\r\n      const formulaireDate =\r\n        formEvent?.at || dossier.date_creation || dossier.derniere_modification || null;\r\n\r\n      // B) PIÈCES (hors mandat) — binaire : déposé/non déposé\r\n      const byType = groupByType(piecesClient);\r\n      const hasAllRequiredUploaded =\r\n        REQUIRED_PIECES.length > 0 &&\r\n        REQUIRED_PIECES.every((t) =>\r\n          (byType.get(t) || []).some((p) => Boolean(p.uploaded_at))\r\n        );\r\n      const piecesStatus = hasAllRequiredUploaded ? \"completed\" : \"pending\";\r\n      const firstUploadDate = firstUploadAmong(byType, REQUIRED_PIECES);\r\n      const piecesDate = hasAllRequiredUploaded ? firstUploadDate : firstUploadDate;\r\n\r\n      // C) MANDAT — binaire : déposé/non déposé\r\n      const mandatList = byType.get(MANDATE_KEY) || [];\r\n      const mandatUploaded = mandatList.some((p) => Boolean(p.uploaded_at));\r\n      const mandatStatus = mandatUploaded ? \"completed\" : \"pending\";\r\n      const mandatDate = mandatUploaded ? lastDate(mandatList) || null : null;\r\n\r\n// D) TRANSMISSION / TRAITEMENT\r\n\r\n// Transmission = completed seulement si formulaire + pièces + mandat sont completed\r\nconst prereqCompleted =\r\n  formulaireStatus === \"completed\" &&\r\n  piecesStatus === \"completed\" &&\r\n  mandatStatus === \"completed\";\r\n\r\nconst transmissionStatus = prereqCompleted ? \"completed\" : \"pending\";\r\nconst transmissionDate = prereqCompleted\r\n  ? maxDate(formulaireDate, piecesDate, mandatDate)\r\n  : null;\r\n\r\n// Traitement : PAS DE SIGNAL → ne pas auto-compléter\r\nconst traitementStatus =\r\n  dossier.statut === \"rejete\" ? \"error\" : \"pending\";\r\nconst traitementDate = null; // (évite d’afficher une date quand c’est pending)\r\n\r\n\r\n\r\n\r\n      // E) SIREN / ATTESTATION\r\n      const sirenDoc = documentsOfficiels.find(\r\n        (d) =>\r\n          d.type === \"Avis de situation SIRENE\" ||\r\n          (d.type || \"\").toUpperCase().includes(\"SIRENE\") ||\r\n          (d.type || \"\").toUpperCase().includes(\"SIREN\")\r\n      );\r\n      const sirenStatus = sirenDoc ? \"completed\" : \"pending\";\r\n      const sirenDate = sirenDoc?.date || null;\r\n\r\n      const attestationDoc = documentsOfficiels.find(\r\n        (d) =>\r\n          d.type === \"Attestation URSSAF\" ||\r\n          (d.type || \"\").toUpperCase().includes(\"ATTESTATION\")\r\n      );\r\n      const attestationStatus =\r\n        attestationDoc && dossier.statut === \"valide\"\r\n          ? \"completed\"\r\n          : attestationDoc\r\n          ? \"pending\" // plus d'état \"active\"\r\n          : \"pending\";\r\n      const attestationDate = attestationDoc?.date || null;\r\n\r\n      // ---------- TIMELINE ----------\r\n      const timelineSteps = [\r\n        {\r\n          id: \"formulaire\",\r\n          title: \"Formulaire rempli\",\r\n          description:\r\n            formulaireStatus === \"completed\"\r\n              ? \"Vos informations ont été enregistrées\"\r\n              : \"Informations à compléter\",\r\n          date: formulaireDate,\r\n          status: formulaireStatus,\r\n        },\r\n        {\r\n          id: \"pieces\",\r\n          title: \"Pièces requises\",\r\n          description:\r\n            piecesStatus === \"completed\"\r\n              ? \"Toutes les pièces obligatoires sont déposées\"\r\n              : \"Aucune pièce requise complète\",\r\n          date: piecesDate,\r\n          status: piecesStatus,\r\n        },\r\n        {\r\n          id: \"mandat\",\r\n          title: \"Mandat signé\",\r\n          description:\r\n            mandatStatus === \"completed\" ? \"Mandat déposé\" : \"Mandat à déposer\",\r\n          date: mandatDate,\r\n          status: mandatStatus,\r\n        },\r\n        {\r\n          id: \"transmission\",\r\n          title: \"Dossier transmis\",\r\n          description:\r\n            transmissionStatus === \"completed\"\r\n              ? \"Dépôt officiel enregistré\"\r\n              : \"En attente de transmission\",\r\n          date: transmissionDate,\r\n          status: transmissionStatus,\r\n        },\r\n        {\r\n          id: \"processing\",\r\n          title: \"Traitement administratif\",\r\n          description:\r\n            traitementStatus === \"completed\"\r\n              ? \"Traitement terminé\"\r\n              : traitementStatus === \"error\"\r\n              ? \"Dossier rejeté\"\r\n              : \"En attente du dépôt\",\r\n          date: traitementDate,\r\n          status: traitementStatus,\r\n        },\r\n        {\r\n          id: \"siren\",\r\n          title: \"SIREN attribué\",\r\n          description: \"Numéro d'identification reçu\",\r\n          date: sirenDate,\r\n          status: sirenStatus,\r\n        },\r\n        {\r\n          id: \"attestation\",\r\n          title: \"Attestation à télécharger\",\r\n          description: \"Tous vos documents sont prêts\",\r\n          date: attestationDate,\r\n          status: attestationStatus,\r\n        },\r\n      ];\r\n\r\nfunction maxDate(...dates) {\r\n  const ts = dates.filter(Boolean).map(d => new Date(d).getTime()).filter(Number.isFinite);\r\n  return ts.length ? new Date(Math.max(...ts)) : null;\r\n}\r\n\r\n\r\n\r\n      // ---------- MÉTRIQUES ----------\r\n      const macroSteps = timelineSteps.filter((s) => MACRO_STEP_IDS.has(s.id));\r\n      const completion_percent = macroSteps.length\r\n        ? Math.round(\r\n            (macroSteps.filter((s) => s.status === \"completed\").length / macroSteps.length) * 100\r\n          )\r\n        : 0;\r\n\r\n      const documentOfficielsCount = documentsOfficiels.length;\r\n      let estimatedCompletion = null;\r\n      if (dossier.statut === \"en_cours\" && documentOfficielsCount === 0) {\r\n        const baseDays = 7;\r\n        const delayDays = tickets.filter((t) => t.priorite === \"Haute\").length * 2;\r\n        estimatedCompletion = new Date();\r\n        estimatedCompletion.setDate(estimatedCompletion.getDate() + baseDays + delayDays);\r\n      }\r\n\r\n      // ---------- ACTIVITÉ RÉCENTE ----------\r\n      const recentEvents = events.slice(-3).map((e) => ({\r\n        type: \"event\",\r\n        description: e.action,\r\n        date: e.at,\r\n      }));\r\n      const { rows: messagesImportants } = await c.query(\r\n        `\r\n        SELECT sender_type, body, at\r\n        FROM core.messages\r\n        WHERE dossier_id = $1\r\n          AND (sender_type = 'Système' OR body ILIKE '%validé%' OR body ILIKE '%document%')\r\n        ORDER BY at DESC\r\n        LIMIT 2\r\n        `,\r\n        [dossierId]\r\n      );\r\n      const recentMsgs = messagesImportants.map((m) => ({\r\n        type: \"message\",\r\n        description: `${m.sender_type}: ${m.body?.substring(0, 50) || \"\"}...`,\r\n        date: m.at,\r\n      }));\r\n      const recent_activity = [...recentEvents, ...recentMsgs]\r\n        .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n        .slice(0, 5);\r\n\r\n      // ---------- RÉPONSE ----------\r\n      return NextResponse.json({\r\n        dossier: {\r\n          id: dossier.id,\r\n          statut: dossier.statut,\r\n          date_creation: dossier.date_creation,\r\n          derniere_modification: dossier.derniere_modification,\r\n          blocages: dossier.blocages,\r\n          client: `${dossier.prenom} ${dossier.nom}`,\r\n          entreprise_denomination: dossier.entreprise_denomination,\r\n          partenaire_nom: dossier.partenaire_nom,\r\n        },\r\n        timeline_steps: timelineSteps,\r\n        documents_officiels: documentsOfficiels,\r\n        pieces_client: {\r\n          // on laisse ces métriques si utiles, même si la validation ne compte plus pour l'étape\r\n          valides: piecesClient.filter((p) => p.statut === \"valide\").length,\r\n          total: piecesClient.length,\r\n          details: piecesClient,\r\n        },\r\n        metrics: {\r\n          completion_percent,\r\n          estimated_completion: estimatedCompletion,\r\n          documents_officiels_count: documentOfficielsCount,\r\n          tickets_count: tickets.length,\r\n          has_urgent_tickets: tickets.some(\r\n            (t) => t.priorite === \"Haute\" && t.statut !== \"Résolu\"\r\n          ),\r\n        },\r\n        recent_activity,\r\n      });\r\n    } finally {\r\n      c.release();\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Erreur timeline dossier:\", e);\r\n    return NextResponse.json(\r\n      { error: \"Erreur lors de la récupération de la timeline\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/* ------------------ helpers ------------------ */\r\n\r\nfunction groupByType(pieces) {\r\n  const m = new Map();\r\n  for (const p of pieces || []) {\r\n    const key = p.type;\r\n    if (!m.has(key)) m.set(key, []);\r\n    m.get(key).push(p);\r\n  }\r\n  return m;\r\n}\r\nfunction lastDate(list) {\r\n  if (!list || !list.length) return null;\r\n  const dates = list\r\n    .map((x) => x.uploaded_at)\r\n    .filter(Boolean)\r\n    .map((d) => new Date(d).getTime());\r\n  if (!dates.length) return null;\r\n  return new Date(Math.max(...dates));\r\n}\r\nfunction firstUploadAmong(byType, types) {\r\n  const dates = [];\r\n  for (const t of types) {\r\n    for (const p of byType.get(t) || []) {\r\n      if (p.uploaded_at) dates.push(new Date(p.uploaded_at).getTime());\r\n    }\r\n  }\r\n  if (!dates.length) return null;\r\n  return new Date(Math.min(...dates));\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}